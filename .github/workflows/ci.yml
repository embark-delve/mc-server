name: CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest ruff mypy

      - name: Run tests
        run: |
          pytest --cov=src tests/

      - name: Lint with Ruff
        run: |
          ruff check --output-format=github .

      - name: Type check with mypy
        run: |
          mypy src

  terraform:
    name: Terraform
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      - name: Terraform fmt
        id: fmt
        run: terraform -chdir=terraform/aws fmt -check
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: terraform -chdir=terraform/aws init

      - name: Terraform Validate
        id: validate
        run: terraform -chdir=terraform/aws validate -no-color

      - name: Run tfsec
        uses: aquasecurity/tfsec-action@v1.0.0
        with:
          working_directory: terraform/aws

      - name: Run checkov
        uses: bridgecrewio/checkov-action@master
        with:
          directory: terraform/aws
          framework: terraform

      - name: Run infracost
        uses: infracost/actions/setup@v2
        with:
          api-key: ${{ secrets.INFRACOST_API_KEY }}
          currency: USD
        if: ${{ env.INFRACOST_API_KEY != '' }}
        env:
          INFRACOST_API_KEY: ${{ secrets.INFRACOST_API_KEY }}

      - name: Generate infracost diff
        run: |
          cd terraform/aws
          infracost breakdown --path=. --format=json --out-file=/tmp/infracost.json
        if: ${{ env.INFRACOST_API_KEY != '' }}
        env:
          INFRACOST_API_KEY: ${{ secrets.INFRACOST_API_KEY }}

      - name: Post infracost comment
        uses: infracost/actions/comment@v2
        with:
          path: /tmp/infracost.json
        if: ${{ env.INFRACOST_API_KEY != '' && github.event_name == 'pull_request' }}
        env:
          INFRACOST_API_KEY: ${{ secrets.INFRACOST_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-docker:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/minecraft-server:latest
