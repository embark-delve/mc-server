[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "minecraft-server-manager"
version = "1.0.0"
description = "A Python tool for managing Minecraft servers across Docker, AWS and Kubernetes"
authors = [
    {name = "Minecraft Server Manager Team", email = "example@example.com"}
]
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Games/Entertainment",
    "Topic :: System :: Systems Administration",
]
dependencies = [
    "pathlib>=1.0.1",
    "typing-extensions>=4.0.0",
    "boto3>=1.28.0",
    "botocore>=1.31.0",
    "requests>=2.28.0",
    "schedule>=1.2.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.3.1",
    "pytest-cov>=4.1.0",
    "black>=23.3.0",
    "ruff>=0.0.286",
    "mypy>=1.3.0",
    "isort>=5.12.0",
    "types-requests>=2.31.0.0",
    "types-PyYAML>=6.0.12.11",
    "pre-commit>=3.3.3",
]
docs = [
    "mkdocs>=1.5.2",
    "mkdocs-material>=9.2.8",
    "mkdocstrings>=0.22.0",
    "mkdocstrings-python>=1.7.3",
]

[project.scripts]
minecraft-server = "src.minecraft_manager:main"

[tool.setuptools]
packages = ["src"]

[tool.black]
line-length = 88
target-version = ["py38", "py39", "py310", "py311"]
include = '\.pyi?$'

[tool.ruff]
line-length = 88
target-version = "py38"
select = ["E", "F", "B", "I", "W", "C4", "SIM", "ARG", "ERA", "PL", "RUF", "UP"]
ignore = []

[tool.ruff.isort]
known-first-party = ["src"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
strict_optional = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
disallow_incomplete_defs = false

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "--cov=src --cov-report=term --cov-report=xml" 